@using ContractPoe.Models
@model ContractPoe.Models.LecturerClaim

@{
    ViewData["Title"] = "Create Lecturer Claim";
}

<h2>Create Lecturer Claim</h2>

<form asp-action="Create" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label for="HoursWorked">Hours Worked</label>
        <input type="number" id="HoursWorked" name="HoursWorked" class="form-control" step="0.01" required />
    </div>

    <div class="form-group">
        <label for="HourlyRate">Hourly Rate</label>
        <input type="number" id="HourlyRate" name="HourlyRate" class="form-control" step="0.01" required />
    </div>

    <div class="form-group">
        <label for="TotalAmount">Total Amount</label>
        <p id="TotalAmount">0.00</p> <!-- This will display the calculated total -->
    </div>

    <div class="form-group">
        <label for="AdditionalNotes">Additional Notes</label>
        <textarea id="AdditionalNotes" name="AdditionalNotes" class="form-control"></textarea>
    </div>

    <div class="form-group">
        <label for="DocumentPath">Upload Document</label>
        <input type="file" id="DocumentPath" name="DocumentPath" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</form>

<!-- jQuery Script -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Calculate total amount when HoursWorked or HourlyRate changes
        $("#HoursWorked, #HourlyRate").on("input", function () {
            const hours = parseFloat($("#HoursWorked").val()) || 0;
            const rate = parseFloat($("#HourlyRate").val()) || 0;
            $("#TotalAmount").text((hours * rate).toFixed(2));
        });
    });
</script>
